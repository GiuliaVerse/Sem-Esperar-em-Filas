:root {
  /* cores de fundo */
  --sonic-silver: hsl(0, 0%, 47%);
  --eerie-black: hsl(210, 11%, 15%);
  --light-gray: hsl(0, 0%, 83%);
  --davys-gray: hsl(0, 0%, 30%);
  --marigold: hsl(39, 96%, 48%);
  --platinum: hsl(0, 0%, 90%);
  --white: hsl(0, 0%, 100%);
  --black: hsl(0, 0%, 0%);
  --jet: hsl(0, 0%, 21%);


/* tipografia da homepage */
   /* Define a família de fontes a ser usada. */
  --ff-poppins: "Poppins", sans-serif; 

  --fs-2: 4.2rem;
  --fs-5: 3.4rem;
  --fs-6: 3.2rem;
  --fs-8: 2.4rem;

  /*fontes: 500 normal e 700 negrito */
  --fw-500: 500;
  --fw-700: 700;


  /* padding (preenchimento) para seções */
  --section-padding: 100px;


  /* Border Radiu(s (arredondar as bordas) */
  --radius-circle: 50%;
  --radius-20: 20px;
  --radius-15: 15px;
  --radius-10: 10px;

  /* box shadow (efeitos de sombra) */
  --shadow-1: 0 0 30px 4px hsla(0, 0%, 0%, 0.05);
  --shadow-2: -1px 15px 26px -4px hsla(0, 5%, 61%, 0.15);

  /* Transition */
  /* valores para transições, especificando duração e curvas de aceleração. */
  --transition-1: 0.25s ease;
  --transition-2: 0.5s ease;
  --cubic-out: cubic-bezier(0.33, 0.85, 0.4, 0.96);
}
/* -----------------------fim da root ----------------------- */



/* 
  #RESET: Remove margens, paddings e define box-sizing para todos os elementos, 
  garantindo um estilo básico e consistente entre diferentes navegadores. 
*/

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

li { list-style: none; }

a,
img,
span,
input,
button,
ion-icon { display: block; }

a {
  color: inherit;
  text-decoration: none;
}

img { height: auto; }

input,
button {
  background: none;
  border: none;
  font: inherit;
}

input { width: 100%; }

button { cursor: pointer; }

ion-icon { pointer-events: none; }

address { font-style: normal; }

html {
  font-family: var(--ff-poppins);
  font-size: 10px;
  scroll-behavior: smooth;
}

body {
  background-color: var(--white);
  color: var(--sonic-silver);
  font-size: 1.6rem;
  line-height: 1.6;
  overflow: hidden;
}

body.loaded {
  overflow-x: hidden;
  overflow-y: visible;
}

body.active { overflow: hidden; }

:focus-visible { outline-offset: 4px; }

::-webkit-scrollbar { width: 10px; }

::-webkit-scrollbar-track { background-color: hsl(0, 0%, 98%); }

::-webkit-scrollbar-thumb { background-color: hsl(0, 0%, 80%); }

::-webkit-scrollbar-thumb:hover { background-color: hsl(0, 0%, 70%); }
/* -----------------------fim do Reset----------------------- */



  /* #REUSED STYLE */
.container { padding-inline: 15px; }
.section { padding-block: var(--section-padding); }

/* Estiliza títulos (h1 a h5) com cores, peso e tamanhos de fonte. */
.h1,
.h2,
.h3,
.h4,
.h5 {
  color: var(--jet);
  font-weight: var(--fw-700);
  line-height: 1.2;
}

.h1,
.h2 { font-size: var(--fs-2); }

.h3 { font-size: var(--fs-5); }

.h4 { font-size: var(--fs-6); }

.h5 { font-size: var(--fs-8); }
/* -----------------------fim----------------------- */



/* navbar imagem de fundo (banner) */
.has-bg-image {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}
/* -----------------------fim navbar ----------------------- */


  /* seção "Cantinas CTA" */
  .cta-bg-image {
    background-size: 90%; /* Ajusta a imagem para 50% do tamanho do container */
    background-position: center;
  }

  .has-before,
  .has-after {
    position: relative;
    z-index: 1;
   /* z-index 1 elementos fiquem atrás do conteúdo */
  }

  .has-before::before,
  .has-after::after {
    position: absolute;
    content: "";
  }

  .btn {
    padding: 13px 25px;
    display: flex;
    align-items: center;
    gap: 5px;
    max-width: max-content;
    background-color: var(--marigold);
    color: var(--white);
    text-transform: uppercase;
    border-radius: var(--radius-10);
    border: 2px solid var(--marigold);
    transition: var(--transition-1);
    overflow: hidden;
  }

  .btn::after {
    inset: -35px -20px;
    transform: skewY(25deg) translateY(-130px);
    transition: var(--transition-1);
    z-index: -1;
  }

  .btn:is(:hover, :focus-visible)::after { transform: skewY(25deg) translateY(0); }

  .btn-primary::after { background-color: var(--white); }

  .btn-primary:is(:hover, :focus-visible) { color: var(--marigold); }

  .btn-secondary {
    background-color: var(--white);
    color: var(--marigold);
  }

  .btn-secondary::after { background-color: var(--marigold); }

  .btn-secondary:is(:hover, :focus-visible) { color: var(--white); }

  .w-100 { width: 100%; }

  .section-title { margin-block-end: 20px; }

  .grid-list {
    display: grid;
    gap: 60px;
  }


  [data-reveal] {
    opacity: 0;
    transform: translateY(20px);
    transition: var(--transition-2);
  }

  [data-reveal="left"] { transform: translateX(-20px); }

  [data-reveal="right"] { transform: translateX(20px); }

  [data-reveal].revealed {
    opacity: 1;
    transform: translate(0);
  }

/* -----------------------fim do loading----------------------- */


/* loading: estilos para o preloader que aparece enquanto a página está carregando. */
.loading-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-color: var(--white);
  display: grid;
  place-items: center;
  transition: var(--transition-1);
  z-index: 6;
}


/* Quando a classe loaded é adicionada a .loading-container,
o contêiner se torna invisível e transparente, sinalizando que a página terminou de carregar. */
.loading-container.loaded {
  opacity: 0;
  visibility: hidden;
}



.loading-circle {
  width: 50px;
  height: 50px;
  border: 5px solid var(--platinum);
  border-block-start-color: var(--marigold);
  border-radius: var(--radius-circle);
  /*var(--radius-circle): Arredonda a borda da animação circular para 50%, tornando-a circular. */
  animation: loading 0.5s linear infinite;
  /* 0.5 segundos, linear, e se repete infinitamente. */
}

@keyframes loading {
  /* No início da animação, a rotação é 0 graus. */
  0% { transform: rotate(0); } 
  100% { transform: rotate(1turn); }
}

.loading-container.loaded .loading-circle {
  animation-iteration-count: 1;
}
/* -----------------------fim do loading----------------------- */



/* heading */
.overlay,
.header .btn { display: none; }

.header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  padding-block: 20px;
  z-index: 4;
}

.header.active {
  position: fixed;
  background-color: var(--white);
  box-shadow: var(--shadow-2);
  animation: slideIn 0.5s ease forwards;
}

@keyframes slideIn {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(0); }
}

.header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 15px;
}

.header-action { margin-inline-start: auto; }
/* -----------------------fim da heading----------------------- */

.login-btn,
.nav-open-btn {
  padding: 12px;
  color: var(--marigold);
}

.login-btn { font-size: 1.8rem; }

.nav-open-btn { font-size: 2.2rem; }

.navbar {
  position: fixed;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100vh;
  background-color: var(--white);
  padding: 50px 40px;
  visibility: hidden;
  transition: 0.35s var(--cubic-out);
  z-index: 2;
}

.navbar.active {
  transform: translateX(100%);
  visibility: visible;
  transition-duration: 0.5s;
}

.nav-close-btn {
  position: absolute;
  top: 20px;
  right: 20px;
  color: var(--davys-gray);
  font-size: 2.8rem;
  border: 2px solid var(--light-gray);
  border-radius: var(--radius-circle);
  padding: 2px;
}

.nav-close-btn ion-icon { --ionicon-stroke-width: 35px; }

.navbar .logo { margin-block-end: 30px; }

.navbar-item { border-block-end: 1px solid var(--light-gray); }

.navbar-link {
  color: var(--eerie-black);
  padding-block: 12px;
}

.navbar-link:is(:hover, :focus-visible) { color: var(--jet); }

/* food banner da navbar */
.food { padding-block-start: calc(var(--section-padding) + 5px); }

.food .container {
  display: grid;
  gap: 80px;
}

.food-text { margin-block: 8px 40px; }



/* Selecao de .restaurantes */
.selection {
  padding-block-start: 0;
  text-align: center;
}

.selection .section-text { margin-block-end: 60px; }

.selection .card-title { margin-block: 25px; }

.selection .card-title .span {
  display: inline-block;
  color: var(--light-gray);
  font-size: var(--fs-4);
  line-height: 1;
}


/* footer */

.footer {
  text-align: center; 

}




/*-----------------------------------*\
  #MEDIA QUERIES
\*-----------------------------------*/

/**
 * responsive for large than 575px screen
 */

@media (min-width: 575px) {

  /**
   * CUSTOM PROPERTY
   */

  :root {

    /**
     * typography
     */

    --fs-6: 4.2rem;

  }



  /**
   * REUSED STYLE
   */

  .container {
    max-width: 550px;
    width: 100%;
    margin-inline: auto;
  }

  .h1 { --fs-2: 6rem; }

  .h2 { --fs-2: 4.8rem; }



  /**
   * food
   */

  .navbar-banner { 
    align-items: absolute;
    }


  /**
   * selection
   */

  .selection-card .card-banner {
    max-width: max-content;
    margin-inline: auto;
  }

}





/**
 * responsive for large than 768px screen
 */

@media (min-width: 768px) {

  /**
   * REUSED STYLE
   */

  .container { max-width: 720px; }

  .grid-list { grid-template-columns: 1fr 1fr; }



  /**
   * HEADER
   */

  .navbar {
    max-width: 428px;
    left: -430px;
  }

  .overlay {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: var(--black);
    z-index: 1;
    opacity: 0;
    transition: var(--transition-1);
    visibility: hidden;
  }

  .overlay.active {
    visibility: visible;
    opacity: 0.7;
  }

}





/**
 * responsive for large than 992px screen
 */

@media (min-width: 992px) {

  /**
   * REUSED STYLE
   */

  .container { max-width: 960px; }

  

  /**
   * food
   */

  .food .container {
    grid-template-columns: 1fr 1fr;
    align-items: center;
    gap: 30px;
  }

  .food .shape-1 { bottom: 30px; }

  .food .shape-2 {
    top: 80px;
    right: -40px;
  }



  /**
   * selection
   */

  .selection .section-text {
    max-width: 60ch;
    margin-inline: auto;
  }

  .selection .grid-list {
    grid-template-columns: repeat(3, 1fr);
    gap: 24px;
  }

  /**
   * FOOTER
   */

  .footer-top { grid-template-columns: 1fr 0.5fr 1fr; }

}


/**
 * responsive for large than 1200px screen
 */

@media (min-width: 1200px) {

  /**
   * CUSTOM PROPERTY
   */

  :root {

    /**
     * typography
     */

    --fs-6: 4.8rem;

  }



  /**
   * REUSED STYLE
   */

  .container { max-width: 1140px; }



  /** 
   * HEADER
   */

  .navbar,
  .navbar.active {
    all: unset;
    display: block;
  }

  .nav-open-btn,
  .nav-close-btn,
  .navbar .logo,
  .overlay { display: none; }

  .navbar-item { border-block-end: none; }

  .navbar-list {
    display: flex;
    gap: 40px;
  }

  .header .container { gap: 60px; }

  .navbar-link { transition: var(--transition-1); }

  .navbar-link:is(:hover, :focus-visible) { color: var(--marigold); }

  .header .btn-primary { display: block; }

  .header-action {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .login-btn {
    background-color: var(--white);
    border-radius: var(--radius-10);
  }

}

/* 
var(--nome-da-variavel): Utilizado para a manutenção do codigo.
Se precisar alterar um valor (por exemplo, uma cor), você só precisa alterar a variável em um único lugar, em vez de mudar em várias regras CSS. 
*/
